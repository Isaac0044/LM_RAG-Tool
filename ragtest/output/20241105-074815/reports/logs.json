{
    "type": "error",
    "data": "Error Invoking LLM",
    "stack": "Traceback (most recent call last):\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 54, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 236, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\openai\\_base_client.py\", line 1838, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\openai\\_base_client.py\", line 1532, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\openai\\_base_client.py\", line 1635, in _request\n    return await self._process_response(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\openai\\_base_client.py\", line 1732, in _process_response\n    return await api_response.parse()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\openai\\_response.py\", line 426, in parse\n    parsed = self._options.post_parser(parsed)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 224, in parser\n    for embedding in obj.data:\nTypeError: 'NoneType' object is not iterable\n",
    "source": "'NoneType' object is not iterable",
    "details": {
        "input": [
            "\"空間座位預約管理系統\":The 空間座位預約管理系統 (Space Seat Reservation Management System) is an integral part of the organization, responsible for seat reservation services. This system also includes provisions for check-in and check-out procedures, ensuring proper management and utilization of space seats within the organization. While it was not explicitly mentioned in the provided organizational structure, its role in managing seat reservations and related administrative tasks is clear.",
            "\"多媒體視聽/電腦座位\":\"多媒體視聽/電腦座位是一個特定的地點，需要進行刷卡報到和簽退手續。\"",
            "\"預約者\":\"預約者是個人，需要在規定時間內完成刷卡報到和簽退手續。\"",
            "\"5樓多媒體區櫃台\":The \"5樓多媒體區櫃台\" (5th Floor Multimedia Area Reception) is a specific location used for various administrative tasks related to the 5楼多媒體區 (5th Floor Multimedia Area). It serves as a point where individuals can complete both signing in and out procedures, including performing刷卡報到和簽退手續 (card swipe check-in and check-out procedures).",
            "\"未完成報到及簽退\":",
            "\"系統\":",
            "\"簽退手續\":"
        ]
    }
}
{
    "type": "error",
    "data": "Error executing verb \"text_embed\" in create_final_entities: 'NoneType' object is not iterable",
    "stack": "Traceback (most recent call last):\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\datashaper\\workflow\\workflow.py\", line 415, in _execute_verb\n    result = await result\n             ^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\graphrag\\index\\verbs\\text\\embed\\text_embed.py\", line 105, in text_embed\n    return await _text_embed_in_memory(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\graphrag\\index\\verbs\\text\\embed\\text_embed.py\", line 130, in _text_embed_in_memory\n    result = await strategy_exec(texts, callbacks, cache, strategy_args)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\graphrag\\index\\verbs\\text\\embed\\strategies\\openai.py\", line 62, in run\n    embeddings = await _execute(llm, text_batches, ticker, semaphore)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\graphrag\\index\\verbs\\text\\embed\\strategies\\openai.py\", line 106, in _execute\n    results = await asyncio.gather(*futures)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\graphrag\\index\\verbs\\text\\embed\\strategies\\openai.py\", line 100, in embed\n    chunk_embeddings = await llm(chunk)\n                       ^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 96, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 165, in execute_with_retry\n    return await do_attempt(), start\n           ^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 147, in do_attempt\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 50, in __call__\n    return await self._invoke(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 54, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 236, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\openai\\_base_client.py\", line 1838, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\openai\\_base_client.py\", line 1532, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\openai\\_base_client.py\", line 1635, in _request\n    return await self._process_response(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\openai\\_base_client.py\", line 1732, in _process_response\n    return await api_response.parse()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\openai\\_response.py\", line 426, in parse\n    parsed = self._options.post_parser(parsed)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Isaac\\miniconda3\\envs\\DB_web_env\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 224, in parser\n    for embedding in obj.data:\nTypeError: 'NoneType' object is not iterable\n",
    "source": "'NoneType' object is not iterable",
    "details": null
}
